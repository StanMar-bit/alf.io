name: build

on: [push, pull_request]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                postgresql: ['10','14']
        services:
            postgres:
                image: postgres:${{ matrix.postgresql }}
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports:
                    - 5432:5432
                # needed because the postgres container does not provide a healthcheck
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - uses: actions/checkout@v1
            - uses: actions/cache@v1
              with:
                  path: ~/.gradle/caches
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            - uses: actions/cache@v1
              with:
                  path: ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
                  restore-keys: |
                      ${{ runner.os }}-gradlew-
            - name: Set up JDK 17
              uses: actions/setup-java@v1
              with:
                  java-version: 17
            - name: Set up DB
              run: |
                  sudo apt-get update
                  sudo apt-get install --yes postgresql-client
                  psql -h 127.0.0.1 -U postgres postgres -c 'create database alfio;' -f src/test/resources/init-db-user.sql
              env:
                  PGPASSWORD: postgres
            - name: Build with Gradle
              run: ./gradlew dist jacocoTestReport -Dspring.profiles.active=travis -Ddbenv=PGSQL-TRAVIS -Dpgsql${{ matrix.postgresql }}
            - name: upload to sonarcloud
              if: ${{ github.repository == 'alfio-event/alf.io' && matrix.postgresql == '14'}}
              run: ./gradlew sonarqube
              env:
                  SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#            - name: upload-to-coveralls
#              if: matrix.postgresql == '13' # run only once
#              run: ./gradlew coveralls
#              env:
#                  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
            -   name: 'Upload Build'
                if: ${{ github.repository == 'alfio-event/alf.io' && matrix.postgresql == '10'}}
                uses: actions/upload-artifact@v2
                with:
                    name: dist
                    path: build
                    retention-days: 5
    push_image:
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'alfio-event/alf.io' && github.event_name == 'push' }}
        needs: build
        name: Push dev image
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v2
              with:
                  name: dist
            -   name: Configure Docker
                uses: docker/setup-buildx-action@v1
            -   name: Login to Container Registry
                uses: docker/login-action@v1
                with:
                    registry: ghcr.io
                    username: ${{ secrets.CR_USER }}
                    password: ${{ secrets.CR_PAT }}
            -   name: Inject slug/short variables
                uses: rlespinasse/github-slug-action@v3.x
            -   name: Push Docker image
                uses: docker/build-push-action@v2
                with:
                    context: ./dockerize
                    tags: |
                        ghcr.io/alfio-event/alf.io/dev-${{ env.GITHUB_REF_SLUG }}:latest
                    push: true
